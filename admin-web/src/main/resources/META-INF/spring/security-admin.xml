<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <!-- 可以直接访问的资源 -->
    <http pattern="/theme/**" security="none" />
    <http pattern="/auth/*" security="none"/>
    <http pattern="/image.jsp" security="none"/>
    <http pattern="/sms/*" security="none"/>

    <http use-expressions="true" auto-config="false" entry-point-ref="authenticationEntryPoint"
          realm="mgmt" >
        <access-denied-handler ref="accessDeniedHandler" />
        <!-- 登出的配置 -->
        <logout invalidate-session="true"  logout-url="/logout" logout-success-url="/auth/toLoginView" />
        <!-- 一个账户只允许一个人登录 -->
        <session-management >
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/logout" />
        </session-management>
        <!-- 替换默认登录验证 -->
        <custom-filter position="FORM_LOGIN_FILTER" ref="customerUsernamePasswordAuthenticationFilter"/>

        <custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
    </http>

    <!-- 权限认证失败处理 -->
    <beans:bean id="accessDeniedHandler" class="com.shop.admin.security.handler.CustomerAccessDeniedHandler"/>

    <beans:bean id="customerUsernamePasswordAuthenticationFilter" class="com.shop.admin.security.filter.CustomerUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <!-- 用户名参数名称 -->
        <beans:property name="usernameParameter" value="username" />
        <!-- 密码参数名称 -->
        <beans:property name="passwordParameter" value="password" />

        <beans:property name="postOnly" value="true" />
        <beans:property name="filterProcessesUrl" value="/login" />
        <!-- 认证成功处理 -->
        <beans:property name="authenticationSuccessHandler" ref="customerAuthenticationSuccessHandler" />
        <!-- 认证失败处理 -->
        <beans:property name="authenticationFailureHandler" ref="customerAuthenticationFailureHandler" />
    </beans:bean>
    <!-- 认证成功处理 -->
    <beans:bean id="customerAuthenticationSuccessHandler" class="com.shop.admin.security.handler.CutomerAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl"  value="/index" />
    </beans:bean>

    <!-- 认证失败处理 -->
    <beans:bean id="customerAuthenticationFailureHandler" class="com.shop.admin.security.handler.CustomerAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl"  value="/auth/toLoginView" />
        <!-- 跳转方式 -->
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="customerSecurityAuthenticationProvider" />
    </authentication-manager>
    <!-- 用户权限处理 -->
    <beans:bean id="filterSecurityInterceptor" class="com.shop.admin.security.filter.CustomerSecurityAuthencationFilter" >

        <!-- 用户拥有的权限 -->
        <beans:property name="authenticationManager" ref="authenticationManager"/>

        <!-- 用户是否拥有所请求资源的权限 -->
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <!-- 资源与权限对应关系 -->
        <beans:property name="securityMetadataSource" ref="securityMetadataSource" />
    </beans:bean>

    <!-- 密码加密方式 ,authentication-provider 使用-->
    <beans:bean id="passwordEncoder" class="com.shop.admin.security.encoder.MD5Encoder">

    </beans:bean>

    <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg value="/auth/toLoginView" />
        <beans:property name="useForward" value="false" />
    </beans:bean><!--
	<beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<beans:property name="realmName" value="qianmama-mgmt" />
	</beans:bean>
	-->
    <!-- 用户名、密码验证 -->
    <beans:bean id="securityUserService" class="com.shop.admin.security.service.StaffUserDetailService" />

    <beans:bean id="customerSecurityAuthenticationProvider" class="com.shop.admin.security.provider.CustomerSecurityAuthenticationProvider">
        <beans:property name="userDetailsService" ref="securityUserService"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>

    <!-- 自定义资源权限关系认证 -->
    <beans:bean id="accessDecisionManager"
                class="com.shop.admin.security.manager.StaffAccessDecisionManager" />

    <!-- 自定义资源权限关系集合 -->
    <beans:bean id="securityMetadataSource"
                class="com.shop.admin.security.manager.StaffSecurityMetadataSource">
    </beans:bean>

</beans:beans>
